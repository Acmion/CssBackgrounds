$bg-width: 100;
$bg-height: 100;

$bg-width-unit: "vw";
$bg-height-unit: "vh";

$bg-width-with-unit: #{($bg-width + $bg-width-unit)};
$bg-height-with-unit: #{($bg-height + $bg-height-unit)};

$star-layer-count: 3;
$star-layer-sizes: 0.3rem, 0.2rem, 0.1rem;
$star-layer-durations: 60s, 100s, 140s;
$star-layer-opacities: 0.7, 0.6, 0.5;
$star-layer-star-counts: 50, 80, 150;
$star-colors: rgba(200, 200, 255), white, rgba(255, 200, 200);

$stripe-count: 10;
$stripe-spacing: 12rem;
$stripe-rotation: 30deg;
$stripe-border-top-width-before: 640rem;
$stripe-border-top-width-after: 512rem;
$stripe-border-side-width: 16rem;
$stripe-border-color: rgba(49, 49, 142, 0.08);

.cb-space
{
    width: 100%;
    height: $bg-height-with-unit;
    position: relative;
    overflow: hidden;
    
    background: radial-gradient(ellipse at center, rgba(10, 10, 30, 0.8) 0%, transparent 80%);
}

.cb-stripes
{
    top: 0;
    left: 0;

    width: 100%;
    height: 100%;
    position: absolute;
}

.cb-stripe
{
    display: none;
    position: relative;

    &::before,
    &::after
    {
        top: 50vh;
        left: 50%;

        border-right: $stripe-border-side-width solid transparent;
        border-left: $stripe-border-side-width solid transparent;

        content: "";
        position: absolute;
        transform: translate(-50%, -50%) rotate($stripe-rotation);
    }

    &::before
    {
        border-top: $stripe-border-top-width-before solid $stripe-border-color;
    }

    &::after
    {
        border-top: $stripe-border-top-width-after solid $stripe-border-color;
        border-bottom: ($stripe-border-top-width-before - $stripe-border-top-width-after) solid transparent;
    }
}


@for $i from 1 through $stripe-count
{
    .cb-stripe:nth-child(#{$i})
    {
        display: block;
        left: -1 * $stripe-spacing * ($stripe-count - 1) + $stripe-spacing * 2 * ($i - 1);
    }
}

@for $i from 1 through $star-layer-count
{
    $selector: ".cb-space" + " > " + ".cb-stars:nth-child(" + #{$i} + ")";

    #{$selector}
    {
        width: nth($star-layer-sizes, $i);
        height: nth($star-layer-sizes, $i);
        opacity: nth($star-layer-opacities, $i);

        $box-shadow-value: "";
        @for $j from 1 through nth($star-layer-star-counts, $i)
        {
            $x-offset: random($bg-width);
            $y-offset: random($bg-height);
            $y-offset-plus-height: $y-offset + $bg-height;

            $box-shadow-value: $box-shadow-value + 
                               $x-offset + $bg-width-unit + " " + 
                               $y-offset + $bg-height-unit + " " + 
                               nth($star-colors, random(length($star-colors)));

            $box-shadow-value: $box-shadow-value + ", ";

            $box-shadow-value: $box-shadow-value + 
                               $x-offset + $bg-width-unit + " " + 
                               $y-offset-plus-height + $bg-height-unit + " " + 
                               nth($star-colors, random(length($star-colors)));


            @if $j < nth($star-layer-star-counts, $i)
            {
                $box-shadow-value: $box-shadow-value + ", ";
            }
        }

        box-shadow: #{$box-shadow-value};
        animation: star-animation nth($star-layer-durations, $i) linear infinite;
    }
}

@keyframes star-animation 
{
    from 
    {
        transform: translateY(0);
    }
    to 
    {
        transform: translateY(-$bg-height-with-unit);
    }
}